{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","apiResponse","isOpen","handleSubmit","bind","handleClose","handleOpen","this","setState","event","preventDefault","formElements","target","elements","console","log","oppName","formOpportunityName","value","orgName","formOrgName","contactEmail","formOrgEmail","opportunityType","result","i","length","type","checked","push","calcCheckboxes","locationType","formLocType","location","formLocation","link","formLink","startDate","formStartDate","endDate","formEndDate","description","formDesc","min_age","formMinAge","jsonFormat","Object","opp_name","org_name","opp_type","email","location_type","toLowerCase","start_date","end_date","axios","post","then","response","catch","err","status","className","Modal","Dialog","Header","Title","Form","onSubmit","Body","Container","style","textAlign","Group","controlId","Label","Control","required","placeholder","Row","Col","Check","label","as","Text","muted","Footer","Button","variant","show","onHide","closeButton","onClick","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","rel","href","integrity","crossorigin","basename","process","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.768c2920.chunk.js","sourcesContent":["import './App.css';\nimport { Row, Col, Form, Modal, Container, Button, FormControl } from 'react-bootstrap'\nimport React from 'react';\nimport axios from \"axios\";\n//Need to add error modal if there is an opportunity already in database\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={apiResponse:\"\", isOpen:false};\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleOpen = this.handleOpen.bind(this)\n  }\n  \n  handleOpen(){\n    this.setState({\n      isOpen: true\n    })\n  }\n\n  handleClose(){\n    this.setState({\n      isOpen: false\n    })\n  }\n\n  handleSubmit(event){\n    event.preventDefault();\n    let formElements = event.target.elements;\n    console.log(formElements)\n    let oppName = formElements.formOpportunityName.value;\n    let orgName = formElements.formOrgName.value;\n    let contactEmail = formElements.formOrgEmail.value;\n    \n    function calcCheckboxes(){\n      let result = [];\n      for(let i = 0; i < formElements.length;i++){\n        if(formElements[i].type === \"checkbox\"){\n            if(formElements[i].checked){\n              result.push(formElements[i].value)\n            }\n        }\n      }\n      return result;\n    }\n\n    let opportunityType = calcCheckboxes();\n    let locationType = formElements.formLocType.value;\n    let location = formElements.formLocation.value;\n    let link = formElements.formLink.value;\n    let startDate = formElements.formStartDate.value;\n    let endDate = formElements.formEndDate.value;\n    let description = formElements.formDesc.value;\n    let min_age = formElements.formMinAge.value;\n    let jsonFormat = new Object();\n    jsonFormat.opp_name = oppName;\n    jsonFormat.org_name = orgName;\n    jsonFormat.opp_type = opportunityType;\n    jsonFormat.email = contactEmail;\n    jsonFormat.location_type = locationType.toLowerCase();\n    jsonFormat.location = location;\n    jsonFormat.link = link;\n    jsonFormat.start_date = startDate;\n    jsonFormat.end_date = endDate;\n    jsonFormat.description = description;\n    jsonFormat.min_age = min_age;\n    console.log(jsonFormat)\n\n\n    axios.post(\"http://34.201.174.195:9000/opportunity\",jsonFormat)\n          .then(response=> {\n            console.log(response);\n            //Add success modal\n                         })\n          .catch(err => {\n            if(err.response.status == 201){\n              console.log(\"headass\");\n              this.handleOpen();\n            }\n          })\n\n\n\n  }\n\n\n  // componentDidMount = () => {\n  //   axios.get(\"/users\").then(response=>{\n  //     console.log(response);\n  //   });\n  // }\n\n  render() {\n    return (\n\n      <div className=\"App\">\n        <Modal.Dialog>\n          <Modal.Header>\n            <Modal.Title>Organization Database Form</Modal.Title>\n          </Modal.Header>\n          <Form onSubmit={this.handleSubmit}>\n            <Modal.Body>\n              <Container style={{ textAlign: \"left\" }}>\n                <Form.Group controlId=\"formOpportunityName\">\n                  <Form.Label>Opportunity Name</Form.Label>\n                  <Form.Control required type=\"text\" placeholder=\"Enter name\" />\n                </Form.Group>\n                <Form.Group controlId=\"formOrgName\">\n                  <Form.Label>Organziation Name</Form.Label>\n                  <Form.Control required type=\"text\" placeholder=\"Enter organization\" />\n                </Form.Group>\n                <Form.Group controlId=\"formOrgEmail\">\n                  <Form.Label>Contact Email</Form.Label>\n                  <Form.Control required type=\"email\" placeholder=\"email@example.com\"></Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"formOppType\">\n                  <Form.Label>Type of Opportunity/Opportunities</Form.Label>\n                  <Row>\n                  <Col>\n                  <Form.Check type=\"checkbox\" label=\"Poverty Support\" value=\"Poverty Support\"/>\n                  </Col>\n                  <Col>\n                  <Form.Check type=\"checkbox\" label=\"Religious-Based Service\" value=\"Religious-Based Service\"/>\n                  </Col>\n                  </Row>\n                  <Row>\n                    <Col>\n                    <Form.Check type=\"checkbox\" label=\"Environmental Advocacy\" value=\"Environmental Advocacy\"/>\n                    </Col>\n                    <Col>\n                    <Form.Check type=\"checkbox\" label=\"Animal Shelters\" value=\"Animal Shelters\"/>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col>\n                  <Form.Check type=\"checkbox\" label=\"Support Groups\" value=\"Support Groups\"/>\n                  </Col>\n                  <Col>\n                  <Form.Check type=\"checkbox\" label=\"LGBTQ+ Outreach\" value=\"LGBTQ+ Outreach\"/>\n                  </Col>\n                  </Row>\n                  <Row>\n                    <Col>\n                  <Form.Check type=\"checkbox\" label=\"Disaster Relief\" value=\"Disaster Relief\"/>\n                  </Col>\n                  <Col>\n                  <Form.Check type=\"checkbox\" label=\"Political/Social Advocacy\" value=\"Political/Social Advocacy\"/>\n                  </Col>\n                  </Row>\n                  <Row>\n                    <Col>\n                  <Form.Check type=\"checkbox\" label=\"Minority Groups\" value=\"Minority Groups\" />\n                    </Col>\n                  </Row>\n                </Form.Group>\n                <Form.Group controlId=\"formLocType\">\n                  <Form.Label>Location Type</Form.Label>\n                  <Form.Control required as=\"select\">\n                    <option>Virtual</option>\n                    <option>In-Person</option>\n                    <option>Both</option>\n                  </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"formLocation\">\n                  <Form.Label>Location</Form.Label>\n                  <Form.Control required type=\"text\" placeholder=\"Atlanta, GA\"></Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"formLink\">\n                  <Form.Label>Link</Form.Label>\n                  <Form.Control required type=\"link\" placeholder=\"https://www.example.com\"></Form.Control>\n                </Form.Group>\n                  <Form.Label>Select Date Range</Form.Label>\n                  <Row>\n                    <Col>\n                    <Form.Group controlId=\"formStartDate\">\n\n                      <Form.Text muted>Start</Form.Text>\n                      <Form.Control required type=\"date\" placeholder=\"MM/DD/YYYY\"></Form.Control>\n                      </Form.Group>\n                    </Col>\n                    <Col>\n                    <Form.Group controlId=\"formEndDate\">\n\n                    <Form.Text muted>End</Form.Text>\n                      <Form.Control required type=\"date\" placeholder=\"MM/DD/YYYY\"></Form.Control>\n                    </Form.Group>\n                    </Col>\n                  </Row>\n                <Form.Group controlId=\"formDesc\">\n                  <Form.Label>Description</Form.Label>\n                  <Form.Control required as=\"textarea\" placeholder=\"Description\"></Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"formMinAge\">\n                  <Form.Label>Minimum Age</Form.Label>\n                  <Form.Control required as=\"select\">\n                    <option>13</option>\n                    <option>14</option>\n                    <option>16</option>\n                    <option>17</option>\n                    <option>18</option>\n                  </Form.Control>\n                </Form.Group>\n\n\n\n\n              </Container>\n\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"primary\" type=\"submit\">Submit</Button>\n            </Modal.Footer>\n          </Form>\n        </Modal.Dialog>\n        \n        <Modal show={this.state.isOpen} onHide={this.handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Opportunity already exists!</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Find another one</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <link\n  rel=\"stylesheet\"\n  href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\"\n  integrity=\"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\"\n  crossorigin=\"anonymous\"\n/>\n<Router basename={`${process.env.PUBLIC_URL}/`}>\n  <Route exact path='/' component={App}/>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}